# Grupo: Hackintosh Brasil
# Autor: Jonas Wander
# https://hackintoshbrasil.com/forum
#
# Compat√≠vel com MaciASL (fork Rehabman)
# https://bitbucket.org/RehabMan/os-x-maciasl-patchmatic/downloads/
# 
# Lenovo IdeaPad S145-IKB
# Lenovo IdeaPad S145-IWL
#
# METHOD FOR 16 BITS - CREDITS REHABMAN
into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;

# METHODS FOR MORE THAN 32 BITS - CREDITS REHABMAN
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

# FIX MORE THAN 32 BITS

into device label EC0 code_regex (BDN0,)\s+(64) replace_matched begin BDNX,%2,//%1%2 end;
into device label EC0 code_regex (BMN0,)\s+(72) replace_matched begin BMNX,%2,//%1%2 end;
into device label EC0 code_regex (SMDA,)\s+(256) replace_matched begin SMDZ,%2,//%1%2 end;
into device label EC0 code_regex (FWBT,)\s+(64) replace_matched begin FWBX,%2,//%1%2 end;

into method label GSBI code_regex \(BDN0, replaceall_matched begin (RECB(0x98,64), end;
into method label GSBI code_regex \(BMN0, replaceall_matched begin (RECB(0x8F,72), end;
into method label GSBI code_regex \(FWBT, replaceall_matched begin (RECB(0x14,64), end;

into method label _BIF code_regex \(BDN0, replaceall_matched begin (RECB(0x98,64), end;
into method label _BIF code_regex \(BMN0, replaceall_matched begin (RECB(0x8F,72), end;

into method label _BIX code_regex \(BDN0, replaceall_matched begin (RECB(0x98,64), end;
into method label _BIX code_regex \(BMN0, replaceall_matched begin (RECB(0x8F,72), end;

into method label MHIF code_regex \(FWBT, replaceall_matched begin (RECB(0x14,64), end;
into method label GBID code_regex \(FWBT, replaceall_matched begin (RECB(0x14,64), end;
into method label MHPF code_regex SMDA replaceall_matched begin RECB(0x64,256) end;
into method label BATD code_regex \(\^\^PCI0.LPCB.EC0.FWBT, replaceall_matched begin (\^\^PCI0.LPCB.EC0.RECB(0x14,64), end;

# FIX 16 BITS
into device label EC0 code_regex B1C1,\s+16 replace_matched begin C100,8,C101,8 end;
into device label EC0 code_regex B1C2,\s+16 replace_matched begin C200,8,C201,8 end;
into device label EC0 code_regex B1C3,\s+16 replace_matched begin C300,8,C301,8 end;
into device label EC0 code_regex B1C4,\s+16 replace_matched begin C400,8,C401,8 end;
into device label EC0 code_regex FBUD,\s+16 replace_matched begin UD00,8,UD01,8 end;
into device label EC0 code_regex B1DC,\s+16 replace_matched begin DC00,8,DC01,8 end;
into device label EC0 code_regex B1FC,\s+16 replace_matched begin FC00,8,FC01,8 end;
into device label EC0 code_regex B1DV,\s+16 replace_matched begin DV00,8,DV01,8 end;
into device label EC0 code_regex B1SN,\s+16 replace_matched begin SN00,8,SN01,8 end;
into device label EC0 code_regex B1FV,\s+16 replace_matched begin FV00,8,FV01,8 end;
into device label EC0 code_regex B1AC,\s+16 replace_matched begin AC00,8,AC01,8 end;
into device label EC0 code_regex B1CR,\s+16 replace_matched begin CR00,8,CR01,8 end;
into device label EC0 code_regex B1SM,\s+16 replace_matched begin SM00,8,SM01,8 end;
into device label EC0 code_regex B1CC,\s+16 replace_matched begin CC00,8,CC01,8 end;
into device label EC0 code_regex BFUD,\s+16 replace_matched begin BF00,8,BF01,8 end;
into device label EC0 code_regex B1RC,\s+16 replace_matched begin RC00,8,RC01,8 end;
into device label EC0 code_regex B1DA,\s+16 replace_matched begin DA00,8,DA01,8 end;

into method label _BIF code_regex \(B1DC, replaceall_matched begin (B1B2(DC00,DC01), end;
into method label _BIF code_regex \(B1DV, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label _BIF code_regex \(B1FC, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label _BIF code_regex B1FC replaceall_matched begin (B1B2(FC00,FC01)) end;
into method label _BIF code_regex \(B1SN, replaceall_matched begin (B1B2(SN00,SN01), end;

into method label _BIX code_regex \(B1DC, replaceall_matched begin (B1B2(DC00,DC01), end;
into method label _BIX code_regex \(B1DV, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label _BIX code_regex \(B1FC, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label _BIX code_regex B1FC replaceall_matched begin (B1B2(FC00,FC01)) end;
into method label _BIX code_regex \(B1SN, replaceall_matched begin (B1B2(SN00,SN01), end;

into method label _BST code_regex \(B1AC, replaceall_matched begin (B1B2(AC00,AC01), end;
into method label _BST code_regex \(B1FV, replaceall_matched begin (B1B2(FV00,FV01), end;
into method label _BST code_regex \(B1RC, replaceall_matched begin (B1B2(RC00,RC01), end;

into method label SMTF code_regex \(B1FV, replaceall_matched begin (B1B2(FV00,FV01), end;
into method label SMTF code_regex \(B1AC, replaceall_matched begin (B1B2(AC00,AC01), end;
into method label SMTF code_regex \(B1FC, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label SMTF code_regex \(B1RC, replaceall_matched begin (B1B2(RC00,RC01), end;
into method label SMTF code_regex \(B1RC, replaceall_matched begin (B1B2(RC00,RC01), end;

into method label SMTE code_regex \(B1AC, replaceall_matched begin (B1B2(AC00,AC01), end;
into method label SMTE code_regex \(B1FV, replaceall_matched begin (B1B2(FV00,FV01), end;
into method label SMTE code_regex \(B1FC, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label SMTE code_regex B1AC replaceall_matched begin (B1B2(AC00,AC01)) end;
into method label SMTE code_regex \(B1RC, replaceall_matched begin (B1B2(RC00,RC01), end;

into method label GSBI code_regex \(B1AC, replaceall_matched begin (B1B2(AC00,AC01), end;
into method label GSBI code_regex \(B1FV, replaceall_matched begin (B1B2(FV00,FV01), end;
into method label GSBI code_regex \(B1FC, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label GSBI code_regex \(B1DC, replaceall_matched begin (B1B2(DC00,DC01), end;
into method label GSBI code_regex \(B1DV, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label GSBI code_regex \(B1DA, replaceall_matched begin (B1B2(DA00,DA01), end;
into method label GSBI code_regex \(BFUD, replaceall_matched begin (B1B2(BF00,BF01), end;
into method label GSBI code_regex \(B1RC, replaceall_matched begin (B1B2(RC00,RC01), end;

into method label BATD code_regex \(\^\^PCI0.LPCB.EC0.B1DA, replaceall_matched begin (B1B2(\^\^PCI0.LPCB.EC0.DA00, \^\^PCI0.LPCB.EC0.DA01), end;
